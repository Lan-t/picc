long f() {
    return 10 + 18;
}

long main() {
    return f();
} $ 28 $$

long main() {
    long a, b = 9;
    a = 10;
    return a + b;
} $ 19 $$

long f(long a, long b) {
    long c = a + b;
    return c;
}

long main() {
    return f(4, 7);
} $ 11 $$

long main() {
    long a;
    a = 10;
    if (a == 10) {
        return 5;
    }
    return 10;
} $ 5 $$

long main() {
    long a;
    a = 20;
    if (a == 10) {
        return 5;
    }
    return 10;
} $ 10 $$

long main() {
    long a;
    a = 0;
    for (long i; i < 10; i = i + 1) {
        a = a + i;
    }
    return a;
} $ 45 $$

long main() {
    long a = 0;
    for(;;) {
        a = a + 1;
        if (a == 30) return a;
    }
} $ 30 $$

long main() {
    long a = 0;
    while (1) {
        a = a + 1;
        if (a == 20) return a;
    }
} $ 20 $$

long main() {
    long a = 0;
    for(;;) {
        a = a + 1;
        if (a == 30) break;
    }
    return a;
} $ 30 $$

long main() {
    long a = 0;
    while (1) {
        a = a + 1;
        if (a == 20) return a;
        if (a < 20) continue;
        return 0;
    }
} $ 20 $$

long main() {
    long a = 10;
    goto A;
    a = 0;
    A:
    return a;
} $ 10 $$

long main() {
    long a = 10;
    return a++;
} $ 10 $$

long main() {
    long a = 10;
    return ++a;
} $ 11 $$

long main() {
    long a = 10;
    a += 10;
    return a;
} $ 20 $$

long main() {
    long a, *b;
    b = &a;
    a = 10;
    return *b;
} $ 10 $$

int main() {
    int a;
    long b;
    a = 10;
    b = 5;
    return a + b;
} $ 15 $$

int main() {
    long a;
    short b;
    b = 10;
    a = b;
    return a;
} $ 10 $$

int main() {
    int *a = malloc(8);
    *a = 10;
    *(a+1) = 20;
    return (*a) + *(a+1);
} $ 30 $$

int main() {
    int *a = malloc(12);
    a[0] = 10;
    a[1] = 20;
    a[2] = 30;
    return a[0] + a[1] + 2[a];
} $ 60 $$
